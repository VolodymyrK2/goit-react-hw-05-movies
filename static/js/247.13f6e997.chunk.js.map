{"version":3,"file":"static/js/247.13f6e997.chunk.js","mappings":"oIAAA,IAAMA,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cAAe,+NA+BbC,EAAM,CAAEC,YA5BM,WACnB,OAASC,MAAM,+DAAgEP,GAC5EQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACRC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAM,UAAUF,EAA5B,GACjB,EAwB0BG,WAtBR,SAACC,GAClB,OAAST,MAAM,sCAAD,OAAuCS,GAAWhB,GAC9DQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACRC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAM,UAAUF,EAA5B,GACjB,EAkBsCK,QAhBvB,SAACD,GACf,OAAST,MAAM,sCAAD,OAAuCS,EAAvC,YAA0DhB,GACtEQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACRC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAM,UAAUF,EAA5B,GACjB,EAY+CM,WAX7B,SAACF,GAClB,OAAST,MAAM,sCAAD,OAAuCS,EAAvC,YAA0DhB,GACtEQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACRC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAM,UAAUF,EAA5B,GACjB,EAO0DO,gBANnC,SAACC,GACvB,OAASb,MAAM,mDAAD,OAAoDa,GAASpB,GACzEQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACRC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAM,UAAUF,EAA5B,GACjB,GAGD,K,8ECTA,UAxBA,WACE,OAAwBS,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQP,GAAYQ,EAAAA,EAAAA,MAAZR,QASN,OARFS,EAAAA,EAAAA,YAAU,WACRpB,EAAAA,EAAAA,QAAYW,GAASR,MAAK,SAAAkB,GACxB,IAAMC,EAAWD,EAAOJ,KAAKM,KAAI,YAC/B,MAAO,CAAEC,OADyF,EAAjEC,QAChBC,UADiF,EAAhDA,UACtBC,KADsE,EAArCA,KAC3BC,WADgE,EAA/BC,aAEpE,IACDX,EAAQI,EACT,GACF,GAAE,CAACX,KAED,wBACEM,GAASA,EAAKM,KAAI,gBAAGC,EAAH,EAAGA,OAAQE,EAAX,EAAWA,UAAWC,EAAtB,EAAsBA,KAAMC,EAA5B,EAA4BA,WAA5B,OACjB,0BACGA,IAAY,gBAAKE,IAAG,2DAAsDF,GAAcG,IAAI,MAC7F,uBAAIJ,KACJ,yBAAG,cAAYD,OAHRF,EADQ,KASxB,C","sources":["api/Api.js","components/Cast/Cast.jsx"],"sourcesContent":["const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmNDlkODE5MmVjNTRkZGNmZGY3MmU4M2JiMThlYTlhMyIsInN1YiI6IjY0NzBmYTZkYTE5OWE2MDBmOTQxYjAzNyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.N6g8pnpZseSkJPe0Eh6_Ge8oq9CHUNHtXvQM4ROvOUg'\n  }\n};\nconst getTrending = () => {\n return   fetch('https://api.themoviedb.org/3/trending/all/day?language=en-US', options)\n   .then(response => response.json())\n        .catch(err => console.error('error: '+err));\n}\n\nconst getDetails = (movieId) => {\n  return   fetch(`https://api.themoviedb.org/3/movie/${movieId}`, options)\n   .then(response => response.json())\n        .catch(err => console.error('error: '+err));\n}\n\nconst getCast = (movieId) => {\n  return   fetch(`https://api.themoviedb.org/3/movie/${movieId}/credits`, options)\n   .then(response => response.json())\n        .catch(err => console.error('error: '+err));\n}\nconst getReviews = (movieId) => {\n  return   fetch(`https://api.themoviedb.org/3/movie/${movieId}/reviews`, options)\n   .then(response => response.json())\n        .catch(err => console.error('error: '+err));\n}\nconst getSearchMovies = (query) => {\n  return   fetch(`https://api.themoviedb.org/3/search/movie?query=${query}`, options)\n   .then(response => response.json())\n        .catch(err => console.error('error: '+err));\n}\n\nconst Api = { getTrending, getDetails, getCast, getReviews,getSearchMovies };\nexport default Api;","import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport Api from 'api/Api';\nfunction Cast() {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n  useEffect(() => {\n    Api.getCast(movieId).then(result => {\n      const castList = result.cast.map(({cast_id: castId, character, name, profile_path: profileUrl }) => {\n        return { castId, character, name, profileUrl }\n      })\n      setCast(castList)\n    })\n  }, [movieId])\n    return (\n     <ul>\n      {cast  && cast.map(({ castId, character, name, profileUrl }) => (\n        <li key={castId}>\n          {profileUrl&&<img src={`https://www.themoviedb.org/t/p/w138_and_h175_face${profileUrl}`} alt='' />}\n          <p>{name}</p>\n          <p>Character: {character}</p>\n        </li>)\n      )}\n    </ul>\n  )\n}\n\nexport default Cast"],"names":["options","method","headers","accept","Authorization","Api","getTrending","fetch","then","response","json","catch","err","console","error","getDetails","movieId","getCast","getReviews","getSearchMovies","query","useState","cast","setCast","useParams","useEffect","result","castList","map","castId","cast_id","character","name","profileUrl","profile_path","src","alt"],"sourceRoot":""}